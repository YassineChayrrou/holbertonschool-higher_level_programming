Module "add_integer" DOCTEST
======================================

Import function "add_integer"
--------------------------------------

The add_integer module import:

    >>> add_integer = __import__("0-add_integer").add_integer

Test for correct function ouput:
    --------------------------------
testing function:
        >>> add_integer(5, 5)
        10

testing function:
        >>> add_integer(-5, -5)
        -10

testing function:
        >>> add_integer(-5, 2)
        -3

testing function:
        >>> add_integer(2, -5)
        -3

testing function:
        >>> add_integer(2, -5)
        -3

testing function:
        >>> add_integer(2, 5)
        7

testing function:
        >>> add_integer(0, 0)
        0

testing function:
        >>> add_integer(10.33322, -5)
        5

testing function:
        >>> add_integer(3.9, -10.2223)
        -7


testing function:
        >>> add_integer(2)
        100

Test Error function output:
    ---------------------------

testing function:
        >>> add_integer(None, 1)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

testing function:
        >>> add_integer(1, None)
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer

testing function:
        >>> add_integer([1, 3], None)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

testing function:
        >>> add_integer({3, 2, 1}, 1)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

testing function:
        >>> add_integer(1, {3, 6, 1})
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer

testing function:
        >>> add_integer({"a": 1}, 1)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

testing function:
        >>> add_integer(1, {"a": 1})
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer

testing function:
        >>> add_integer("aloha", 1)
        Traceback (most recent call last):
            ...
        TypeError: a must be an integer

testing function:
        >>> add_integer(1, "aloha")
        Traceback (most recent call last):
            ...
        TypeError: b must be an integer

testing function:
        >>> add_integer()
        Traceback (most recent call last):
            ...
        TypeError: add_integer() missing 1 required positional argument: 'a'

testing function:
        >>> add_integer(float('inf'), 3)
        Traceback (most recent call last):
            ...
        OverflowError: cannot convert float infinity to integer

testing function:
        >>> add_integer(1, float('NaN'))
        Traceback (most recent call last):
            ...
        ValueError: cannot convert float NaN to integer
